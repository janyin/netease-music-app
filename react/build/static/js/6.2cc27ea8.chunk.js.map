{"version":3,"sources":["assets/like.svg","page/player/comment/index.jsx","page/player/index.jsx"],"names":["module","exports","Comment","data","username","time","avatarUrl","likedCount","content","className","src","alt","like","connect","state","curMusic","playerStatus","setCurMusic","setPlayerStatus","props","title","artists","imgUrl","musicUrl","comment","history","location","query","player","React","createRef","goBack","disableMusic","fail","useEffect","a","loading","res","hide","getMusicData","loop","autoPlay","ref","style","backgroundImage","onClick","current","pause","play","map","val","key"],"mappings":"2HAAAA,EAAOC,QAAU,IAA0B,kC,uLCuC5BC,MA/Bf,YAAgF,IAAD,IAA5DC,KAAQC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,QAChE,OACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,WACb,yBAAKC,IAAKJ,EAAWK,IAAI,YAE3B,yBAAKF,UAAU,YACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,YACb,0BAAMA,UAAU,gBAAgBL,GAChC,0BAAMK,UAAU,YAAYJ,IAE9B,yBAAKI,UAAU,YACb,8BAAOF,GACP,2BACE,yBAAKG,IAAKE,IAAMD,IAAI,oBAI1B,yBAAKF,UAAU,eACb,8BAAOD,O,OCgFFK,uBACb,SAACC,GAAD,MAAY,CACVC,SAAUD,EAAMC,SAChBC,aAAcF,EAAME,gBAEtB,CACEC,gBACAC,qBAPWL,EAhGf,SAAgBM,GAAQ,IAAD,EAQjBA,EANFJ,SAAYK,EAFO,EAEPA,MAAOC,EAFA,EAEAA,QAASC,EAFT,EAESA,OAAQC,EAFjB,EAEiBA,SAAUC,EAF3B,EAE2BA,QAC9CR,EAKEG,EALFH,aACAC,EAIEE,EAJFF,YACAC,EAGEC,EAHFD,gBACAO,EAEEN,EAFFM,QACmBtB,EACjBgB,EADFO,SAAYC,MAERC,EAASC,IAAMC,YAKrB,SAASC,IACPb,GAAgB,GAChBO,EAAQM,SAMV,SAASC,IACP,IAAMC,KAAK,6CAAW,GAAG,WACvBF,OA+BJ,OAfAG,qBAAU,WAAM,4CACd,4BAAAC,EAAA,6DACE,IAAMC,QAAQ,0CAAa,KAD7B,SAEoBnB,EAAYd,GAFhC,OAEQkC,EAFR,OAGE,IAAMC,OACM,iBAARD,EACFL,IAEAd,GAAgB,GAPpB,4CADc,uBAAC,WAAD,wBAWdqB,KAEC,CAACpC,IAGF,6BACE,2BAAOO,IAAKa,EAAUiB,MAAI,EAACC,UAAQ,EAACC,IAAKd,GAAzC,8EAGA,yBAAKnB,UAAU,UAAUkC,MAAO,CAAEC,gBAAgB,OAAD,OAAStB,EAAT,QACjD,yBAAKb,UAAU,WACb,yBAAKA,UAAU,iBAAiBoC,QAASd,GACvC,6CAEF,yBAAKtB,UAAU,cAAcoC,QAnCnC,WACM7B,EACFY,EAAOkB,QAAQC,QAEfnB,EAAOkB,QAAQE,OAEjB9B,GAAiBF,KA8BX,yBAAKP,UAAU,WACf,yBAAKA,UAAU,eACb,yBAAKA,UAAU,YACb,yBACEA,UAAS,iCACNO,GAAgB,aAGnB,kBAAC,gBAAD,CAAeN,IAAKY,EAAQX,IAAI,YAIpCK,GAAgB,0BAAMP,UAAU,cAEpC,yBAAKA,UAAU,aACb,uBAAGA,UAAU,cACVW,EADH,UACYC,IAGd,yBAAKZ,UAAU,gBACb,uDADF,OAEGe,QAFH,IAEGA,OAFH,EAEGA,EAASyB,KAAI,SAACC,GAAD,OACZ,kBAAC,EAAD,CAASC,IAAKD,EAAI1C,QAASL,KAAM+C","file":"static/js/6.2cc27ea8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/like.523c0ab6.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\nimport like from '@/assets/like.svg';\n\n/**\n * 歌曲热门评论组件\n */\nfunction Comment({ data: { username, time, avatarUrl, likedCount, content } }) {\n  return (\n    <div className=\"comment_item\">\n      <div className=\"cmt_img\">\n        <img src={avatarUrl} alt=\"avatar\" />\n      </div>\n      <div className=\"cmt_wrap\">\n        <div className=\"cmt_header\">\n          <div className=\"cmt_info\">\n            <span className=\"cmt_username\">{username}</span>\n            <span className=\"cmt_time\">{time}</span>\n          </div>\n          <div className=\"cmt_like\">\n            <span>{likedCount}</span>\n            <i>\n              <img src={like} alt=\"点赞\" />\n            </i>\n          </div>\n        </div>\n        <div className=\"cmt_content\">\n          <span>{content}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nComment.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Comment;\n","import { setCurMusic, setPlayerStatus } from '@/store/action';\nimport { Toast } from 'antd-mobile';\nimport React, { useEffect } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { connect } from 'react-redux';\nimport Comment from './comment';\nimport './index.css';\n\n/**\n * 播放页面\n * @author janyin\n */\nfunction Player(props) {\n  const {\n    curMusic: { title, artists, imgUrl, musicUrl, comment },\n    playerStatus,\n    setCurMusic,\n    setPlayerStatus,\n    history,\n    location: { query: data },\n  } = props;\n  const player = React.createRef();\n\n  /**\n   *回到上一页面\n   */\n  function goBack() {\n    setPlayerStatus(false);\n    history.goBack();\n  }\n\n  /**\n   * 歌曲版权受限制时\n   */\n  function disableMusic() {\n    Toast.fail('该音乐无法播放', 2, () => {\n      goBack();\n    });\n  }\n  /**\n   * 改变播放状态，点暂停的时候\n   */\n  function changeStatus() {\n    if (playerStatus) {\n      player.current.pause();\n    } else {\n      player.current.play();\n    }\n    setPlayerStatus(!playerStatus);\n  }\n\n  // eslint-disable-next-line\n  useEffect(() => {\n    async function getMusicData() {\n      Toast.loading('正在加载数据...', 100);\n      const res = await setCurMusic(data);\n      Toast.hide();\n      if (res === 'DISABLEMUSIC') {\n        disableMusic();\n      } else {\n        setPlayerStatus(true);\n      }\n    }\n    getMusicData();\n    // eslint-disable-next-line\n  }, [data]);\n\n  return (\n    <div>\n      <audio src={musicUrl} loop autoPlay ref={player}>\n        你的浏览器暂时不支持H5播放\n      </audio>\n      <div className=\"song_bg\" style={{ backgroundImage: `url(${imgUrl})` }} />\n      <div className=\"wrapper\">\n        <div className=\"player_getBack\" onClick={goBack}>\n          <h3>返回</h3>\n        </div>\n        <div className=\"icon_rotate\" onClick={changeStatus}>\n          <div className=\"needle\" />\n          <div className=\"icon_center\">\n            <div className=\"song_img\">\n              <div\n                className={`default_img rotateDiv ${\n                  !playerStatus && 'noRotate'\n                }`}\n              >\n                <LazyLoadImage src={imgUrl} alt=\"pic\" />\n              </div>\n            </div>\n          </div>\n          {!playerStatus && <span className=\"play_btn\" />}\n        </div>\n        <div className=\"song_info\">\n          <p className=\"song_title\">\n            {title} —{artists}\n          </p>\n        </div>\n        <div className=\"comment_wrap\">\n          <p>热门评论</p>\n          {comment?.map((val) => (\n            <Comment key={val.content} data={val} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  (state) => ({\n    curMusic: state.curMusic,\n    playerStatus: state.playerStatus,\n  }),\n  {\n    setCurMusic,\n    setPlayerStatus,\n  },\n)(Player);\n"],"sourceRoot":""}